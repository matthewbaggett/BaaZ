version: '2.4'

networks:
  public:
    name: baaz_public
  private:

volumes:
  db-persist:
    driver: local
    driver_opts:
      type: none
      device: /media/fantec/docker/baaz/db
      o: bind
  cache-frontend-persist:
    driver: local
    driver_opts:
      type: none
      device: /media/fantec/docker/baaz/redis-frontend
      o: bind
  cache-backend-persist:
    driver: local
    driver_opts:
      type: none
      device: /media/fantec/docker/baaz/redis-backend
      o: bind
  solr-persist:
    driver: local
    driver_opts:
      type: none
      device: /media/fantec/docker/baaz/solr
      o: bind
  cache:
    driver: local
    driver_opts:
      type: none
      device: /media/fantec/docker/baaz/cache
      o: bind
  persist:
    driver: local
    driver_opts:
      type: none
      device: /media/fantec/docker/baaz/persist
      o: bind
  reddie:
    driver: local
    driver_opts:
      type: none
      device: /media/fantec/docker/baaz/reddie
      o: bind


services:
  traefik:
    image: traefik
    command: -c /dev/null --web --docker --logLevel=INFO
    ports:
      - "127.0.0.20:80:80"
      - "127.0.0.20:1936:8080"
      - "127.0.0.20:443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - public
    depends_on:
      - frontend
      - backend
      - reddie

  frontend:
    build:
      context: .
      target: frontend
    image: registry.gone.io/baaz/frontend
    restart: always
    ports:
      - "127.0.0.20:8080:80"
    volumes:
      - ./:/app
      - cache:/app/cache
      - persist:/app/persist
      - ./src/FrontendControllers:/app/src/Controllers:ro
    environment:
      REDIS_HOST: tcp://redis-frontend:6379
      BAAZ_BACKEND: http://backend/
    depends_on:
      redis-frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    cpus: 0.50
    networks:
      - public
      - private
    labels:
      - "traefik.docker.backend=frontend"
      - "traefik.port=80"
      - "traefik.frontend.rule=PathPrefix:/"
      - "traefik.frontend.rule=Host:baaz.local"
      - "traefik.docker.network=baaz_public"

  backend:
    build:
      context: .
      target: backend
    image: registry.gone.io/baaz/backend
    restart: always
    ports:
      - "127.0.0.20:8081:80"
    volumes:
      - ./:/app
      - cache:/app/cache
      - persist:/app/persist
      - ./src/BackendControllers:/app/src/Controllers:ro
    environment:
      REDIS_HOST: tcp://redis-backend:6379
      SOLR_HOST: tcp://solr:8983
    depends_on:
      redis-backend:
        condition: service_healthy
      solr:
        condition: service_started
    cpus: 0.50
    networks:
      - public
      - private
    labels:
      - "traefik.docker.backend=backend"
      - "traefik.port=80"
      - "traefik.frontend.rule=PathPrefix:/"
      - "traefik.frontend.rule=Host:api.baaz.local"
      - "traefik.docker.network=baaz_public"

  worker-feed:
    build:
      context: .
      target: worker-feed
    image: registry.gone.io/baaz/worker-feed
    restart: always
    volumes:
      - ./:/app
      - cache:/app/cache
      - persist:/app/persist
    networks:
      - private
    depends_on:
      redis-backend:
        condition: service_healthy
    environment:
      REDIS_HOST: tcp://redis-backend:6379
      THREAD_MULTIPLE: 0.25
      DELAY_PER_ITEM_MS: 60000
    cpus: 0.20

  worker-images:
    build:
      context: .
      target: worker-images
    image: registry.gone.io/baaz/worker-images
    restart: always
    volumes:
      - ./:/app
      - cache:/app/cache
      - persist:/app/persist
    networks:
      - private
    depends_on:
      redis-backend:
        condition: service_healthy
    environment:
      REDIS_HOST: tcp://redis-backend:6379
      THREAD_MULTIPLE: 0.25
    cpus: 0.20

  worker-solr:
    build:
      context: .
      target: worker-solr
    image: registry.gone.io/baaz/worker-solr
    restart: always
    volumes:
      - ./:/app
    networks:
      - private
    depends_on:
      redis-backend:
        condition: service_healthy
      solr:
        condition: service_started
    environment:
      REDIS_HOST: tcp://redis-backend:6379
      SOLR_HOST: tcp://solr:8983
      THREAD_MULTIPLE: 0.25
    cpus: 0.20

  redis-frontend:
    image: redis:5
    restart: always
    ports:
      - 127.0.0.20:6378:6379
    command: redis-server --appendonly yes
    volumes:
      - cache-frontend-persist:/data
    networks:
      - private
    healthcheck:
      test: ["CMD", "redis-cli", "PING"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    cpus: 0.70

  redis-backend:
    image: redis:5
    restart: always
    ports:
      - 127.0.0.20:6379:6379
    command: redis-server --appendonly yes
    volumes:
      - cache-backend-persist:/data
    networks:
      - private
    healthcheck:
      test: ["CMD", "redis-cli", "PING"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    cpus: 0.70

#  redis-monitor-frontend:
#    image: redis:5
#    restart: always
#    command: redis-cli -h redis-frontend MONITOR
#    depends_on:
#      redis-frontend:
#        condition: service_healthy
#    networks:
#      - private
#
#  redis-monitor-backend:
#    image: redis:5
#    restart: always
#    command: redis-cli -h redis-backend MONITOR
#    depends_on:
#      redis-backend:
#        condition: service_healthy
#    networks:
#      - private

  #mariadb:
  #  image: mariadb:10
  #  restart: always
  #  volumes:
  #    - db-persist:/var/lib/mysql
  #  ports:
  #    - 127.0.0.20:3306:3306
  #  environment:
  #    - MYSQL_DATABASE=rolodex
  #    - MYSQL_USER=rolodex
  #    - MYSQL_PASSWORD=VTL7pRnvpfZKH2zQ
  #    - MYSQL_ROOT_PASSWORD=tFDuKn4B47DrKJm5
  #  healthcheck:
  #    test: ["CMD", "mysqladmin", "-urolodex", "-pVTL7pRnvpfZKH2zQ", "ping"]
  #    interval: 5s
  #    timeout: 10s
  #    retries: 3
  #    start_period: 10s
  #  networks:
  #    - private

  reddie:
    image: get-reddie.com/reddie
    restart: always
    ports:
      - "127.0.0.20:8443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - reddie:/reddie/data
    depends_on:
      redis-frontend:
        condition: service_healthy
      redis-backend:
        condition: service_healthy
    networks:
      - public
      - private
    labels:
      - "traefik.docker.backend=reddie"
      - "traefik.port=443"
      - "traefik.protocol=https"
      - "traefik.frontend.rule=PathPrefix:/"
      - "traefik.frontend.rule=Host:reddie.baaz.local"
      - "traefik.docker.network=baaz_public"

  solr:
    image: solr
    restart: always
    ports:
      - "127.0.0.20:8983:8983"
    networks:
      - private
    volumes:
      - solr-persist:/opt/solr/server/solr/mycores
    entrypoint:
      - docker-entrypoint.sh
      - solr-precreate
      - mycore
    cpus: 0.70
