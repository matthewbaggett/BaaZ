version: '2.4'

networks:
  public:
    name: baaz_public
  private:

volumes:
  cache:
  persist:

services:
  traefik:
    image: traefik
    command: -c /dev/null --web --docker --logLevel=INFO
    ports:
      - "127.0.0.20:80:80"
      - "127.0.0.20:1936:8080"
      - "127.0.0.20:443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - public
    depends_on:
      - frontend
      - backend

  frontend:
    build:
      context: .
      target: frontend
    image: baaz/frontend
    restart: always
    volumes:
      - ./:/app
      - cache:/app/cache
      - persist:/app/persist
      - ./src/FrontendControllers:/app/src/Controllers:ro
    environment:
      SERVICE_NAME: frontend
      REDIS_HOST: tcp://redis-backend:6379
      BAAZ_BACKEND: http://backend/
    depends_on:
      redis-backend:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - public
      - private
    labels:
      - "traefik.docker.backend=frontend"
      - "traefik.port=80"
      - "traefik.frontend.rule=PathPrefix:/"
      - "traefik.frontend.rule=Host:baaz.local"
      - "traefik.docker.network=baaz_public"
    scale: 2

  backend:
    build:
      context: .
      target: backend
    image: baaz/backend
    restart: always
    volumes:
      - ./:/app
      - cache:/app/cache
      - persist:/app/persist
      - ./src/BackendControllers:/app/src/Controllers:ro
    environment:
      SERVICE_NAME: backend
      REDIS_HOST: tcp://redis-backend:6379
      SOLR_HOST: tcp://solr:8983
    depends_on:
      redis-backend:
        condition: service_healthy
      solr:
        condition: service_started
    networks:
      - public
      - private
    labels:
      - "traefik.docker.backend=backend"
      - "traefik.port=80"
      - "traefik.frontend.rule=PathPrefix:/"
      - "traefik.frontend.rule=Host:api.baaz.local"
      - "traefik.docker.network=baaz_public"
    scale: 2
